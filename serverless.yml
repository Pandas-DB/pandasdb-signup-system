service: pandasdb-signup-system

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-west-1
  environment:
    USER_POOL_ID: !Ref CognitoUserPool
    USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
    AUTH_TYPE: ${env:AUTH_TYPE, 'email'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:AdminInitiateAuth
        - cognito-idp:AdminCreateUser
        - cognito-idp:AdminSetUserPassword
        - cognito-idp:RespondToAuthChallenge
      Resource: !GetAtt CognitoUserPool.Arn
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: "*"

plugins:
  - serverless-esbuild

custom:
  authType: ${env:AUTH_TYPE, 'email'}
  esbuild:
    bundle: true
    minify: true

functions:
  signUp:
    handler: src/handlers/auth.signUp
    events:
      - http:
          path: auth/signup
          method: post
          cors: true

  signIn:
    handler: src/handlers/auth.signIn
    events:
      - http:
          path: auth/signin
          method: post
          cors: true

  confirmSignUp:
    handler: src/handlers/auth.confirmSignUp
    events:
      - http:
          path: auth/confirm
          method: post
          cors: true

  resendConfirmationCode:
    handler: src/handlers/auth.resendConfirmationCode
    events:
      - http:
          path: auth/resend
          method: post
          cors: true

  forgotPassword:
    handler: src/handlers/auth.forgotPassword
    events:
      - http:
          path: auth/forgot-password
          method: post
          cors: true

  confirmForgotPassword:
    handler: src/handlers/auth.confirmForgotPassword
    events:
      - http:
          path: auth/confirm-forgot-password
          method: post
          cors: true

  initiatePhoneAuth:
    handler: src/handlers/auth.initiatePhoneAuth
    events:
      - http:
          path: auth/phone/initiate
          method: post
          cors: true

  confirmPhoneAuth:
    handler: src/handlers/auth.confirmPhoneAuth
    events:
      - http:
          path: auth/phone/confirm
          method: post
          cors: true

  resendPhoneCode:
    handler: src/handlers/auth.resendPhoneCode
    events:
      - http:
          path: auth/phone/resend
          method: post
          cors: true

resources:
  Conditions:
    IsEmailAuth: 
      Fn::Equals: 
        - ${self:custom.authType}
        - 'email'
    IsPhoneAuth:
      Fn::Equals:
        - ${self:custom.authType}
        - 'phone'

  Resources:
    CognitoSNSRole:
      Type: AWS::IAM::Role
      Condition: IsPhoneAuth
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: cognito-idp.amazonaws.com
              Action: sts:AssumeRole
              Condition:
                StringEquals:
                  sts:ExternalId: ${self:service}-external-id
        Policies:
          - PolicyName: CognitoSNSPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - sns:Publish
                  Resource: "*"

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:custom.authType}-user-pool
        AliasAttributes:
          Fn::If:
            - IsEmailAuth
            - [email]
            - []
        UsernameAttributes:
          Fn::If:
            - IsPhoneAuth
            - [phone_number]
            - !Ref AWS::NoValue
        AutoVerifiedAttributes:
          Fn::If:
            - IsEmailAuth
            - [email]
            - [phone_number]
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireUppercase: true
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
        MfaConfiguration: OFF
        AccountRecoverySetting:
          RecoveryMechanisms:
            Fn::If:
              - IsEmailAuth
              - - Name: verified_email
                  Priority: 1
              - - Name: verified_phone_number
                  Priority: 1
        UsernameConfiguration:
          CaseSensitive: false
        EmailConfiguration:
          Fn::If:
            - IsEmailAuth
            - EmailSendingAccount: COGNITO_DEFAULT
            - !Ref AWS::NoValue
        SmsConfiguration:
          Fn::If:
            - IsPhoneAuth
            - SnsCallerArn: !GetAtt CognitoSNSRole.Arn
              ExternalId: ${self:service}-external-id
            - !Ref AWS::NoValue

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-${self:custom.authType}-client
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          Fn::If:
            - IsPhoneAuth
            - - ALLOW_USER_PASSWORD_AUTH
              - ALLOW_USER_SRP_AUTH
              - ALLOW_REFRESH_TOKEN_AUTH
              - ALLOW_CUSTOM_AUTH
            - - ALLOW_USER_PASSWORD_AUTH
              - ALLOW_USER_SRP_AUTH
              - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false
        PreventUserExistenceErrors: ENABLED

  Outputs:
    UserPoolId:
      Value: !Ref CognitoUserPool
      Export:
        Name: ${self:service}-user-pool-id
    
    UserPoolClientId:
      Value: !Ref CognitoUserPoolClient
      Export:
        Name: ${self:service}-user-pool-client-id

    AuthType:
      Value: ${self:custom.authType}
      Export:
        Name: ${self:service}-auth-type
